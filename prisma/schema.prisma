// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  email       String    @unique
  password    String
  lastLogin   DateTime?
  externalId  String?   @unique
  createdBy   String    @default("system")
  createdDate DateTime  @default(now())
  updatedBy   String?
  updatedDate DateTime  @default(now())
  deletedBy   String?
  isDeleted   Boolean   @default(false)
  deletedDate DateTime?
  profile     Profile[]
}

model Profile {
  id          Int       @id @default(autoincrement())
  name        String
  dob         DateTime
  isActive    Boolean   @default(false)
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  createdBy   String    @default("system")
  createdDate DateTime  @default(now())
  updatedBy   String?
  updatedDate DateTime  @default(now())
  deletedBy   String?
  isDeleted   Boolean   @default(false)
  deletedDate DateTime?
}

model Ingredient {
  id          Int       @id @default(autoincrement())
  name        String
  unit        String
  quantity    Int
  type        Int
  notes       String?
  sku         String?
  createdBy   String    @default("system")
  createdDate DateTime  @default(now())
  updatedBy   String?
  updatedDate DateTime  @default(now())
  deletedBy   String?
  isDeleted   Boolean   @default(false)
  deletedDate DateTime?
}

model Item {
  id          Int         @id @default(autoincrement())
  title       String
  notes       String?
  createdBy   String      @default("system")
  createdDate DateTime    @default(now())
  updatedBy   String?
  updatedDate DateTime    @default(now())
  deletedBy   String?
  isDeleted   Boolean     @default(false)
  deletedDate DateTime?
  orderItem   OrderItem[]
}

model Order {
  id           Int       @id @default(autoincrement())
  customerName String?
  phoneNumber  String?
  email        String?
  city         String?
  province     String?
  status       Int
  createdBy    String    @default("system")
  createdDate  DateTime  @default(now())
  updatedBy    String?
  updatedDate  DateTime  @default(now())
  deletedBy    String?
  isDeleted    Boolean   @default(false)
  deletedDate  DateTime?
}

model OrderItem {
  id          Int       @id @default(autoincrement())
  item        Item      @relation(fields: [itemId], references: [id])
  itemId      Int
  price       Int
  createdBy   String    @default("system")
  createdDate DateTime  @default(now())
  updatedBy   String?
  updatedDate DateTime  @default(now())
  deletedBy   String?
  isDeleted   Boolean   @default(false)
  deletedDate DateTime?
}
